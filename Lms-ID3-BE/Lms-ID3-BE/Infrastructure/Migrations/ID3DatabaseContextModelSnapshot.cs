// <auto-generated />
using System;
using Lms_ID3_BE.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Lms_ID3_BE.Infrastructure.Migrations
{
    [DbContext(typeof(ID3DatabaseContext))]
    partial class ID3DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Lms_ID3_BE.Infrastructure.Entities.Course.CourseEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("Lms_ID3_BE.Infrastructure.Entities.Student.StudentEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("EndStudyingAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartStudyingAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("Lms_ID3_BE.Infrastructure.Entities.Subject.SubjectEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("Compulsory")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PracticalCreditCount")
                        .HasColumnType("integer");

                    b.Property<string>("SubjectEntityId")
                        .HasColumnType("text");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("TheoricalCreditCount")
                        .HasColumnType("integer");

                    b.Property<int>("TotalCreditCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubjectEntityId");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("Lms_ID3_BE.Infrastructure.Entities.Subject.SubjectEntity", b =>
                {
                    b.HasOne("Lms_ID3_BE.Infrastructure.Entities.Subject.SubjectEntity", null)
                        .WithMany("PreModules")
                        .HasForeignKey("SubjectEntityId");
                });

            modelBuilder.Entity("Lms_ID3_BE.Infrastructure.Entities.Subject.SubjectEntity", b =>
                {
                    b.Navigation("PreModules");
                });
#pragma warning restore 612, 618
        }
    }
}
